@Service is a Spring annotation used to mark a class as a service layer component in a Spring application.
It is a specialization of @Component, indicating that the class contains business logic.
Classes annotated with @Service are automatically detected during component scanning and registered as beans in the Spring context.
Using @Service helps separate business logic from controllers and repositories, promoting a clean layered architecture.

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.stereotype.Service;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;

@SpringBootApplication
public class MyApp {
    public static void main(String[] args) {
        SpringApplication.run(MyApp.class, args);
    }
}

@Service
class EmployeeService {
    public String getEmployee() {
        return "John Doe";
    }
}

@Component
class EmployeeController {

    @Autowired
    private EmployeeService employeeService;

    public void showEmployee() {
        System.out.println(employeeService.getEmployee());
    }
}

How it works:
Spring scans EmployeeService and registers it as a bean.
EmployeeController injects it using @Autowired.
@Service indicates that this class contains business logic, separating it from controllers (@Controller) and repositories (@Repository).