1. Write a Java 8 program to count the number of strings starting with a specific letter in a list.
import java.util.Arrays;
import java.util.List;

public class CountStrings {

    public static void main(String[] args) {
        List<String> names= Arrays.asList("Hari","Hani","Harsh","Mani");

        Long count=names.stream()
                .filter(name->name.startsWith("H"))
                .count();
        System.out.println("Count of H words:- "+count);
    }
}

2.Sort a list of strings by length using Java 8.
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class SortByLength {
    public static void main(String[] args) {

        List<String> name= Arrays.asList("Hari","Ram","Krishna","Mani","Kumar");

        List<String> Sortednames=name.stream().sorted((s1,s2)->s1.length()-s2.length()).collect(Collectors.toList());
        System.out.println(Sortednames);
    }
}

3.Java 8 Program to Filter Even and Odd Numbers
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class Even_Odd {
    public static void main(String[] args) {
        List<Integer> numbers= Arrays.asList(1,2,4,3,5,6,7,5,7,8,7,9,10);

        Set<Integer> s=new HashSet<>(numbers);
        List<Integer> even=s.stream().filter(n->n%2==0).collect(Collectors.toList());

        List<Integer> odd=s.stream().filter(n->n%2!=0).collect(Collectors.toList());
        System.out.println("Even Numbers:- "+even);
        System.out.println("Odd Numbers:- "+odd);
    }
}

4.Find all numbers starting with 1 using Stream functions
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class StartsWithOne {
    public static void main(String[] args) {
        List<Integer> numbser= Arrays.asList(12,2,13,4,1,515,122);

        List<String> startsWithOne =numbser.stream()
                .map(String::valueOf)
                .filter(n->n.startsWith("1"))
                .collect(Collectors.toList());

        System.out.println("Numbers start with 1:- "+startsWithOne);
    }
}

5.Find the total number of elements present in the list using Stream functions
public class CountElements {

    public static void main(String[] args) {
        List<Integer> numbers= Arrays.asList(1,2,3,4,5,6);
        Long count=numbers.stream().count();

        System.out.println("Total elements in the list is :- "+count);
    }
}

6.Write a Java 8 program to calculate the sum of integers in a list ?
import java.util.Arrays;
import java.util.List;

public class NumberSum {
    public static void main(String[] args) {
        List<Integer> list= Arrays.asList(1,2,3,4,5,6,7);

        Integer sum=list.stream().reduce(0,Integer::sum);
        System.out.println("Sum of elements in list:- "+sum);
    }
}

7.Write a Java 8 program to find the maximum element from a list ?
  import java.util.Arrays;
  import java.util.List;
  import java.util.Optional;

  public class max_element {
      public static void main(String[] args) {
          List<Integer> list= Arrays.asList(1,2,43,14,55,6,7,8,9);
          Optional<Integer> max=list.stream().max(Integer::compareTo);

          System.out.println("Max number in the list:- "+max);
      }
  }

8.Write a Java 8 program to check if a list contains a specific element ?
  public class TargetNumber {
      public static void main(String[] args) {
          List<Integer> list= Arrays.asList(1,2,3,4,5,7,8,5,9,6);
          int target=5;

          boolean isPresent=list.stream().anyMatch(n->n==target);

          System.out.println("List Contains "+ target+":- "+isPresent);
      }
  }

9.Write a Java 8 program to find the sum of all even numbers in a list of integers ?
  public class EvenSum {
      public static void main(String[] args) {
          List<Integer> list= Arrays.asList(1,2,3,4,5,6,7,8,9,10,11,12,14,16,18,20);

          int evenSum= list.stream().filter(n->n%2==0).mapToInt(n->n).sum();

          System.out.println("Sum of Even numbers in the list:- "+evenSum);
      }
  }

10.Write a Java 8 program to concatenate all strings in a list ?
   public class StringConcatenation {
       public static void main(String[] args) {
           List<String> words= Arrays.asList("Majjare","Hari","Kumar");

           String result=words.stream().reduce("",(s1,s2)->s1+s2);

           System.out.println("Concatenated String:- "+result);
       }
   }

11.Write a Java 8 program to find the average length of strings in a list of strings?
   public class AverageStringLength {
       public static void main(String[] args) {
           List<String> list= Arrays.asList("Majjare","Hari","Nath","Kumar","Babu");

           double averageStringLength = list.stream().mapToInt(String::length).average().orElse(0.0);

           System.out.println("AverageStringLength :- "+averageStringLength);
       }
   }

12.Write a Java 8 program to count the occurrences of a given character in a list of strings?
   public class CharacterCount {
       public static void main(String[] args) {

           List<String> list= Arrays.asList("Majjare","Hari","Nath","Kumar","Babu");

           char targetChar='a';

           long count=list.stream().flatMapToInt(String::chars).mapToObj(c->(char)c).filter(ch->ch==targetChar || ch==Character.toLowerCase(targetChar)).count();

           System.out.println("Target Character a count:- "+count);
       }
   }

13.Write a Java 8 program to print all elements in a list are greater than a given value?
   public class GratorNumbers {

       public static void main(String[] args) {
           List<Integer> list= Arrays.asList(23,12,43,45,56,76,56);
           int a=25;
           List<Integer> gratorNumbers=list.stream().filter(n->n>a).collect(Collectors.toList());
           System.out.println("GratorNumbers of 25 in the list :- "+gratorNumbers);
       }

   }

14.Write a Java 8 program to find the factorial of a given number ?
   public class Factorial {
       public static void main(String[] args) {
           int a=5;
           int factorial= IntStream.rangeClosed(1,a).reduce(1,(i,b)->i*b);

           System.out.println("Factorial of 5 is :- "+factorial);
       }
   }

15.


